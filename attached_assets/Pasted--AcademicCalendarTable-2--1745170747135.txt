üìÖ AcademicCalendarTable¬†‚Äî –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –º–µ—Å—è—Ü—ã + –≥—Ä–∞–¥–∏–µ–Ω—Ç ¬´—Å–∫–≤–æ–∑–Ω—ã—Ö¬ª –Ω–µ–¥–µ–ª—å

–í–µ—Ä—Å–∏—è¬†2 (–∞–∫—Ç—É–∞–ª—å–Ω–∞—è)¬†‚Äî –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–∫—Å—Ç —É–¥–∞–ª—ë–Ω.

–î–µ–ª–∞–µ—Ç:
1.¬†–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —à–∞–ø–∫–∏ –ø–æ¬†¬´–º–µ—Å—è—Ü¬†–≥–æ–¥¬ª, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π —Å–µ–Ω—Ç—è–±—Ä—å/–æ–∫—Ç—è–±—Ä—å –∏–º–µ–ª —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –Ω–µ–¥–µ–ª–∏.
2.¬†–Ø—á–µ–π–∫–∏ –Ω–µ–¥–µ–ª—å, –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏—Ö –≥—Ä–∞–Ω–∏—Ü—É –º–µ—Å—è—Ü–µ–≤, –∫—Ä–∞—Å—è—Ç—Å—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º¬†50‚ÄØ/‚ÄØ50.
3.¬†Tooltip —Å –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º –¥–∞—Ç¬†–Ω–µ–¥–µ–ª–∏.

1.¬†–£—Ç–∏–ª–∏—Ç–∞ buildAcademicWeeks

src/utils/calendar.ts

import { addWeeks, isBefore, format } from "date-fns";
import ru from "date-fns/locale/ru";

export interface WeekCell {
  startDate: Date;  // —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–Ω—å —Å—Ç–∞—Ä—Ç–∞ –Ω–µ–¥–µ–ª–∏ (–ª—é–±–æ–π)
  endDate: Date;    // +6¬†–¥–Ω–µ–π
  index: number;    // 1 ‚Ä¶ N
}

export const buildAcademicWeeks = (startDate: Date, years = 4): WeekCell[] => {
  const weeks: WeekCell[] = [];
  let curr = new Date(startDate);
  const last = new Date(startDate.getFullYear() + years, 7, 31); // 31¬†–∞–≤–≥
  let idx = 1;
  while (isBefore(curr, addWeeks(last, 1))) {
    const end = new Date(curr); end.setDate(curr.getDate() + 6);
    weeks.push({ startDate: curr, endDate: end, index: idx++ });
    curr = addWeeks(curr, 1);
  }
  return weeks;
};

2.¬†AcademicCalendarTable.tsx ‚Äî –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–∞–≤–∫–∏

2.1¬†–ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–µ—Å—è—Ü—ã

import { format } from "date-fns";
import ru from "date-fns/locale/ru";

const monthGroups = useMemo(() => {
  return weeks.reduce((acc, w) => {
    const key = format(w.startDate, "LLLL yyyy", { locale: ru }); // ¬´—Å–µ–Ω—Ç—è–±—Ä—å¬†2023¬ª
    (acc[key] ||= []).push(w);
    return acc;
  }, {} as Record<string, WeekCell[]>);
}, [weeks]);

2.2¬†–®–∞–ø–∫–∞ –º–µ—Å—è—Ü–µ–≤

<tr>
  <th className="sticky left-0 ...">–ú–µ—Å—è—Ü—ã</th>
  {Object.entries(monthGroups).map(([key, list], i) => {
    const [month, yr] = key.split(" ");
    return (
      <th key={key} colSpan={list.length}
          className={`${i%2?'bg-slate-200':'bg-slate-100'} dark:bg-slate-800 px-2 py-1 text-center font-medium border-x`}>
        {month}
        <span className="block text-[10px] opacity-70">{yr}</span>
      </th>
    );
  })}
</tr>

2.3¬†–Ø—á–µ–π–∫–∏ –∫—É—Ä—Å–∞ —Å¬†–≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º

{weeks.map((w, i) => {
  const cellKey  = getCellKey(courseId, w.index);
  const activity = tableData[cellKey] || "";
  const { bg, text } = getActivityStyle(activity);
  const isSelected  = cellKey === selectedCellKey;

  // –Ω–µ–¥–µ–ª—è –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç –º–µ—Å—è—Ü?
  const crossMonth = w.startDate.getMonth() !== w.endDate.getMonth();

  const chessBg = (i % 8 < 4)
    ? 'bg-slate-50/50 dark:bg-slate-900/50'
    : 'bg-white    dark:bg-slate-950/40';

  const gradientBg = (i % 8 < 4)
    ? 'bg-gradient-to-r from-slate-50 to-slate-100 dark:from-slate-900 dark:to-slate-800'
    : 'bg-gradient-to-r from-slate-100 to-slate-50 dark:from-slate-800 dark:to-slate-900';

  return (
    <td key={cellKey}
        title={`${format(w.startDate,'d¬†MMM',{locale:ru})} ‚Äì ${format(w.endDate,'d¬†MMM',{locale:ru})}`}
        className={`p-0 text-center cursor-pointer transition-colors
          ${(i===weeks.length-1||w.endDate.getMonth()!==weeks[i+1].endDate.getMonth())?'border-r-2 border-slate-600':''}
          ${isSelected?'ring-2 ring-blue-500':''}`}
        onClick={() => handleCellClick({ courseId, weekNumber: w.index, monthName: format(w.startDate,'LLLL',{locale:ru}), value: activity })}>
      <div className={`h-8 w-full flex items-center justify-center
          ${activity ? bg : (crossMonth ? gradientBg : chessBg)} hover:brightness-95`}>
        <span className={`font-bold text-sm ${activity ? text : ''}`}>
          {activity ? (activity.length>1 ? activity[0]+'+' : activity) : ''}
        </span>
        {activity && activity.length>1 &&
          <span className="ml-0.5 text-[10px] opacity-70">{activity.length}</span>}
      </div>
    </td>
  );
})}

üîÑ –£–¥–∞–ª–∏—Ç–µ –ø—Ä–µ–∂–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã MONTHS, WEEKS_PER_MONTH ‚Äî –æ–Ω–∏ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã.

3.¬†–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —Ç–∞–± ¬´–ì—Ä–∞—Ñ–∏–∫¬ª

import { buildAcademicWeeks } from "@/utils/calendar";
import { StartDatePicker } from "@/components/ui/StartDatePicker";

const defaultStart = new Date(planYear, 8, 1); // 1¬†—Å–µ–Ω—Ç
const [startDate, setStartDate] = useState(defaultStart);
const weeks = useMemo(() => buildAcademicWeeks(startDate), [startDate]);
...
<StartDatePicker value={startDate} onChange={setStartDate} />
<AcademicCalendarTable weeks={weeks} ... />

–¢–µ–ø–µ—Ä—å:

–®–∞–ø–∫–∞ ¬´—Å–µ–Ω—Ç—è–±—Ä—å¬†2023¬ª, ¬´–æ–∫—Ç—è–±—Ä—å¬†2023¬ª, ‚Ä¶ –∏–º–µ–µ—Ç —Ä–æ–≤–Ω–æ 4‚Äë6 –∫–æ–ª–æ–Ω–æ–∫.

–ù–µ–¥–µ–ª–∏, –ø–æ–ø–∞–¥–∞—é—â–∏–µ –Ω–∞ –¥–≤–∞ –º–µ—Å—è—Ü–∞, –≤–∏–∑—É–∞–ª—å–Ω–æ –¥–µ–ª—è—Ç—Å—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º.

Tooltip –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç.  üëç


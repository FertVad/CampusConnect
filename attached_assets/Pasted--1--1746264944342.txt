# Задача: строки «Курс 1-…» в табе «График» должны динамически
#          соответствовать числу лет обучения, которое пользователь
#          задаёт в титульном листе.

Сейчас:  
• В титуле меняем «Срок обучения» с 4 лет, например, на 5.  
• Нажимаем «Сохранить».  
• Переходим в «График» — там всё-равно остаётся 4 строки (Курс 1 … Курс 4).

Нужно:  
когда поле `years_of_study` (или как оно у нас называется в TitularForm) меняется
и запись успешно сохраняется, **GraphTab** должен сразу
перестраивать список курсов: 3 года → 3 строки, 5 лет → 5 строк и т.д.

---

## Что сделать

1. **Источник правды**  
   - В Redux-/Zustand-сторе `curriculumPlan` уже есть `yearsOfStudy`.  
   - Убедись, что после PATCH `PUT /api/curriculum/plans/:id` мы обновляем его в сторе (сейчас, похоже, да).

2. **Подписка в EditCurriculumPlan**  
   - В `EditCurriculumPlan.tsx` вместо локального `const [years, setYears] = useState(...)`
     читай `yearsOfStudy` прямо из стора через селектор.
   - Передавай это значение пропсом в `GraphTab`.

3. **GraphTab / AcademicCalendarTable**  
   - Прими проп `yearsOfStudy` (число).  
   - Там, где сейчас константа `NUMBER_OF_COURSES = 4`, убери жёсткое число:  
     ```ts
     const courseCount = yearsOfStudy;     // получает 3,4,5 …
     for (let i = 1; i <= courseCount; i++) { ... }
     ```
   - Не забыть мемоизацию: всё, что строит массив курсов, должно иметь
     `useMemo([yearsOfStudy, startDates, tableData])`, чтобы не пересчитываться зря.

4. **Защититься от «дыр»**  
   - Если в `tableData` ещё остались ключи `course5_weekX` → при уменьшении
     лет до 4 просто игнорируем их при рендере (фильтр по `courseId <= yearsOfStudy`).

5. **Тест**  
   - В титуле меняем «5 лет» → Сохранить.  
   - Не перезагружая страницу, переходим в «График» — видим 5 строк.  
   - Меняем на «3 года» → Сохранить — «График» отображает 3 строки.  
   - Автосохранения работают как раньше, лишних PATCH нет.

Ожидаемый результат: кол-во строк всегда синхронизируется с полем «Срок обучения».
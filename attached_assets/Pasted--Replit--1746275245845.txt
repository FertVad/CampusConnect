⛑ Промт для Replit (вставь целиком в правое окно)

⸻

Тема

Фикс «потери» данных титульного листа — после ручного Save поля «Уровень образования» и «Форма обучения» откатываются к старым значениям при повторном открытии плана.

⸻

Кратко, что происходит сейчас
	1.	EditCurriculumPlan.tsx при onSubmit() шлёт PATCH / PUT, но в payload нет двух полей:
educationLevel, studyForm.
	2.	После закрытия страницы при повторном GET бек-энд присылает старые значения → форма «зрисетчивается».
	3.	Header-бейдж с краткой строкой (например «СПО · 4 года · Заочная») рендерится из локального состояния и потому остаётся “новым”, а сама форма — «старой» → визуальный раздрай.

⸻

Что нужно сделать (пошагово)
	1.	Расширить DTO / payload
	•	Проверь текущую типизацию CurriculumPlanUpdateDto (или аналог).
	•	Добавь два обязательных поля:

educationLevel: string;   // “СПО | ВО | ...”
studyForm:      string;   // “Очная | Заочная | ...”


	2.	Правка onSubmit
	•	В EditCurriculumPlan.tsx найди savePlan() / handleSubmit() (внизу формы).
	•	Убедись, что в объект, который уходит через api.patch('/curriculum/:id', data) попадают все контролируемые значения.
	•	Мини-чек-лист полей, которые точно должны быть в теле запроса:
	•	title (название плана)
	•	specialityCode
	•	educationLevel ✅
	•	studyForm ✅
	•	durationYears, durationMonths
	•	startYear, graduationYear
	3.	Обновить локальный store после save
	•	Сразу после успешного ответа await api.patch… вызови mutate()/queryClient.invalidateQueries() (что у нас используется) — чтобы кэш в GraphTab, Goals и т.д. обновился.
	4.	Форма = controlled
	•	Проверь, что <Select value={..} onValueChange={setState}> настроены как контролируемые компоненты.
	•	defaultValue ➜ убрать/заменить на value везде, иначе React не апдейтит UI после запроса.
	5.	Синхронный update бейджа в header
	•	Бейдж сейчас читает planHeader из локального useState. Заменить на селектор стора / React-Query data → он всегда покажет то же, что и форма.
	6.	Тест-кейс
	1.	Открыть любой план.
	2.	В выпадашке Уровень образования выбрать «ВО», в Форма обучения — «Очно-заочная».
	3.	Нажать Сохранить изменения — убедиться в сети, что PATCH содержит оба поля.
	4.	Вернуться в список планов, снова открыть тот же план → значения должны остаться «ВО» и «Очно-заочная».

⸻

Ожидаемый результат
	•	После фикса значения полей не сбрасываются при повторном открытии.
	•	PATCH-логика посылает ровно одно сохранение (без бесконечного автосейва).
	•	Бейдж в заголовке и данные формы всегда синхронизированы.

⸻

Важно: никаких новых UI-элементов не добавляем. Меняем только сохранение данных и синхронизацию стейта.
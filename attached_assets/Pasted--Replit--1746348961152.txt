Промт для Replit
(вставь всё целиком – это один запрос)

⸻

Исправляем иерархию + убираем лишнюю кнопку «Сохранить»

1  Поведение «Добавить»
	1.	Контекст родителя
	•	Если перед кликом выделена строка:
	•	section → показать «Группа дисциплин» и «Дисциплина».
	•	group   → показать только «Дисциплина».
	•	subject → по-умолчанию берем его parentId (т.е. добавляем «рядом»).
	•	Если ничего не выделено — добавляем новый section в конец.
	2.	parentId / orderIndex
	•	parentId = id выбранного родителя.
	•	orderIndex = max(children.orderIndex)+1 внутри этого родителя.
	•	После вставки не перемешиваем остальные строки – пусть остаются со старыми orderIndex.
	3.	UI-обновление
	•	Новая строка сразу переходит в режим «переименования» (<input autoFocus>).
	•	Сворачиваемая иконка у родителя автоматически раскрывается, если была закрыта.

2  Валидация перед сохранением учебного плана
	•	section не должен быть пустым – предупреждаем, но позволяем.
	•	group без subject – красная подсветка + disable кнопки «Сохранить изменения» в шапке.
	•	subject.hours.every(h=>h>=0) – иначе toast «Часы не могут быть отрицательными».

Отдельная кнопка «Сохранить» внутри таба больше не нужна.
Удаляем её из PlanTab.tsx и оставляем единственную глобальную «Сохранить изменения» сверху страницы.

3  Изменения кода
	1.	PlanTab.tsx
	•	Удалить <Button variant="outline">Сохранить</Button>.
	•	В пропсах вернуть onDirtyChange(boolean) – true, когда local state ≠ backend state.
Главная страница уже умеет дезэйблить верхнюю кнопку, просто прокинь.
	2.	usePlanTree.ts (или где хранится дерево)

export const addNode = (
  type: 'section'|'group'|'subject',
  parentId: string|null
) => {
  const id = uuid();
  const order = children(parentId).length;
  const base = { id, parentId, orderIndex: order, title: 'Новый элемент' };
  const node: PlanNode =
    type==='subject'
      ? { ...base, type:'subject', hours: Array(semesters).fill(0) }
      : { ...base, type };
  setTree(t => [...t, node]);
  return id;
};


	3.	AddRowPopover.tsx
	•	Параметры выпадающего меню формируй из типа выделенного узла (см. поведение п.1).
	•	После addNode сразу вызывай startInlineEdit(newId).
	4.	drag-and-drop – не трогаем; при переносе оставляем текущую логику, она уже корректно обновляет parentId и orderIndex.

4  QA-чек-лист
	1.	Добавить раздел → группу → дисциплину – всё в правильном уровне, сразу в rename-mode.
	2.	Выделить дисциплину и нажать «＋ строка» → появляется дисциплина-сосед, не группа.
	3.	Группа без дисциплин = красная, глобальная «Сохранить изменения» недоступна.
	4.	Лишней кнопки «Сохранить» внутри таба нет.
	5.	После F5 структура и часы сохраняются.

⸻

Ожидаемый результат
	•	Добавление элементов всегда попадает в нужный уровень и правильный родитель.
	•	Внутри таба нет дублирующей кнопки «Сохранить» – пользователю достаточно основной в заголовке страницы.
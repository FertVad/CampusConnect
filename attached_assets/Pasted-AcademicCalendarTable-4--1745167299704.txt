AcademicCalendarTable – динамические недели

Задача

Убрать жёсткое "4 недели в месяце" и строить таблицу по реальному календарю.

1. Утилита календаря с произвольной датой старта

src/utils/calendar.ts

import { addDays, addWeeks, isBefore, format } from "date-fns";
import ru from "date-fns/locale/ru";

export interface WeekCell {
  startDate: Date;   // понедельник недели
  endDate: Date;     // воскресенье
  month: string;     // «Сентябрь»
  index: number;     // порядковый номер (1…n)
}

/**
 * Строит массив недель учебного года.
 * @param rawStart   День начала обучения (например, 2023‑09‑01).
 *                   Первая неделя начнётся с ближайшего ПОНЕДЕЛЬНИКА ПОСЛЕ этой даты
 *                   (если сам день — понедельник, он и будет стартом).
 * @param years      Сколько лет длится программа (по умолч. 1).
 */
export const buildAcademicWeeks = (rawStart: Date, years = 1): WeekCell[] => {
  // 1. Делаем startDate — ближайший понедельник **не раньше** rawStart
  const day = rawStart.getDay();        // 0 = вс, 1 = пн …
  const offset = day === 1 ? 0 : (8 - day) % 7;  // 0 если пн, иначе смещение вперёд
  let curr = addDays(rawStart, offset);

  // 2. Конец периода = 31 авг через `years` лет
  const finish = new Date(rawStart.getFullYear() + years, 7, 31);

  // 3. Нарезаем по 7 дней
  const weeks: WeekCell[] = [];
  let n = 1;
  while (isBefore(curr, addDays(finish, 1))) {
    const start = curr;
    const end = addDays(curr, 6);                // воскресенье
    weeks.push({
      startDate: start,
      endDate: end,
      month: format(start, "LLLL", { locale: ru }),
      index: n++,
    });
    curr = addWeeks(curr, 1);
  }
  return weeks;
};
```ts
import { startOfWeek, addWeeks, isBefore, format } from "date-fns";
import ru from "date-fns/locale/ru";

export interface WeekCell {
  startDate: Date;   // понедельник
  endDate: Date;     // воскресенье
  month: string;     // «Сентябрь» и т.д.
  index: number;     // порядковый номер недели с 1
}

export const buildAcademicWeeks = (startYear: number): WeekCell[] => {
  // Учебный год считается с 1 сентября startYear до 31 августа (startYear+1)
  const sept1 = new Date(startYear, 8, 1);                  // 8 = сентябрь
  let curr = startOfWeek(sept1, { weekStartsOn: 1 });       // ближайший понедельник
  const lastDay = new Date(startYear + 1, 7, 31);           // 31 августа

  const weeks: WeekCell[] = [];
  let n = 1;
  while (isBefore(curr, addWeeks(lastDay, 1))) {
    const start = curr;
    const end = addWeeks(curr, 1);
    weeks.push({
      startDate: start,
      endDate: new Date(end.getTime() - 1),
      month: format(start, "LLLL", { locale: ru }),
      index: n++,
    });
    curr = end;
  }
  return weeks;
};
```ts
import { startOfWeek, addWeeks, isBefore, format } from "date-fns";
import ru from "date-fns/locale/ru";

export interface WeekCell {
  startDate: Date;   // понедельник
  endDate: Date;     // воскресенье
  month: string;     // «Сентябрь»
  index: number;     // 1…52
}

export const buildAcademicWeeks = (year = 2025): WeekCell[] => {
  const sept1 = new Date(year, 8, 1);                       // 1 сент
  let curr = startOfWeek(sept1, { weekStartsOn: 1 });        // ближайший понедельник ≤ 1 сент
  const lastDay = new Date(year + 1, 7, 31);                // 31 авг след. г.
  const weeks: WeekCell[] = [];
  let n = 1;
  while (isBefore(curr, addWeeks(lastDay, 1))) {
    const start = curr;
    const end = addWeeks(curr, 1);
    weeks.push({
      startDate: start,
      endDate: new Date(end.getTime() - 1),
      month: format(start, "LLLL", { locale: ru }),
      index: n++,
    });
    curr = end;
  }
  return weeks;
};

2. Импорт в AcademicCalendarTable.tsx

import { buildAcademicWeeks, WeekCell } from "@/utils/calendar";
...
const weeks: WeekCell[] = useMemo(() => buildAcademicWeeks(2025), []);
const monthGroups = useMemo(() => {
  return weeks.reduce((acc, w) => {
    (acc[w.month] ||= []).push(w);
    return acc;
  }, {} as Record<string, WeekCell[]>);
}, [weeks]);

Удаляем константы MONTHS и WEEKS_PER_MONTH.

3. Шапка месяцев и недель

// Месяцы
<tr>
  <th className="sticky left-0 ...">Месяцы</th>
  {Object.entries(monthGroups).map(([m, list], i) => (
    <th key={m} colSpan={list.length}
        className={`px-2 py-1 text-center font-medium border-x ${i%2 ? 'bg-slate-200' : 'bg-slate-100'} dark:bg-slate-800`}>
      {m}
    </th>
  ))}
</tr>

// Номера недель
<tr>
  <th className="sticky left-0 ...">Недели</th>
  {weeks.map((w, idx) => (
    <th key={w.index}
        className={`px-1 py-1 text-xs font-semibold border-x w-8 text-center ${(idx%8<4) ? 'bg-slate-200 dark:bg-slate-700' : 'bg-slate-100 dark:bg-slate-800'}`}>
      {w.index}
    </th>
  ))}
</tr>

4. Строки курсов

Заменяем внутренний двойной цикл на

{weeks.map((w, idx) => {
  const cellKey = getCellKey(courseId, w.index);
  const activity = tableData[cellKey] || "";
  const { bg, text } = getActivityStyle(activity);
  const isSelected = cellKey === selectedCellKey;

  return (
    <td key={cellKey}
        className={`p-0 border-0 text-center cursor-pointer ${(isSelected ? 'ring-2 ring-blue-500' : '')}`}
        onClick={() => handleCellClick({ courseId, weekNumber: w.index, monthName: w.month, value: activity })}>
      <div className={`h-8 w-full flex items-center justify-center ${activity ? bg : (idx%8<4 ? 'bg-slate-50/50 dark:bg-slate-900/50' : 'bg-white dark:bg-slate-950/40')} hover:brightness-95`}>
        <span className={`font-bold text-sm ${activity ? text : ''}`}>{activity ? (activity.length>1 ? activity[0]+'+' : activity) : ''}</span>
        {activity && activity.length>1 && <span className="ml-0.5 text-[10px] opacity-75">{activity.length}</span>}
      </div>
    </td>
  );
})}

5. Что убрать

Переменные weekOffset, weeksInMonth и связанные циклы.

Константы MONTHS, WEEKS_PER_MONTH.

6. Проверка

Перезапусти npm run dev.

В шапке «Март» должно быть 5 колонок, если понедельников пять.

Нумерация недель идёт 1‑52 без пропусков.

Цвета и модалка работают как раньше.



✦ Tooltip с диапазоном дат

Добавь всплывающую подсказку с датами недели.

import { format } from "date-fns";
import ru from "date-fns/locale/ru";
...
<td
  key={cellKey}
  title={`${format(w.startDate,'d MMM',{locale:ru})} – ${format(w.endDate,'d MMM',{locale:ru})}`}
  className={`p-0 border-0 text-center cursor-pointer transition-colors ${isSelected?'ring-2 ring-blue-500':''}`}
  onClick={() => handleCellClick({ courseId, weekNumber: w.index, monthName: w.month, value: activity })}
>
  ...
</td>

title="…" даст нативный tooltip браузера.

Формат d MMM → «4 сен – 10 сен» (локаль Ru).

